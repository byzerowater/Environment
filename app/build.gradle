apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.zerowater.environment"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    buildTypes {

        def url = { path -> "\"defurl$path\"" }

        debug {
            buildConfigField "String", "BASE_URL", url("")
        }
        release {
            buildConfigField "String", "BASE_URL", url("")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "fasto.${variant.versionName}-${variant.name}.apk"
        }
    }

    dependencies {
        final SUPPORT_LIBRARY_VERSION = '27.0.0'
        final RETROFIT_VERSION = '2.3.0'
        final OKHTTP_VERSION = '3.9.0'
        final BUTTERKNIFE_VERSION = '8.8.1'
        final DAGGER_VERSION = '2.5'
        final FIREBASE_VERSION = '11.4.2'
        final GLIDE_VERSION = '4.3.0'
        final TIMBER_VERSION = '4.6.0'
        final RXJAVA_VERSION = '2.1.6'
        final RXANDROID_VERSION = '2.0.1'
        final OTTO_VERSION = '1.3.8'


        compile fileTree(include: ['*.jar'], dir: 'libs')
        testCompile 'junit:junit:4.12'
        compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
        compile "com.google.firebase:firebase-core:$FIREBASE_VERSION"
        compile "com.google.firebase:firebase-auth:$FIREBASE_VERSION"
        compile "com.google.firebase:firebase-database:$FIREBASE_VERSION"
        compile "com.google.firebase:firebase-messaging:$FIREBASE_VERSION"
        compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
            transitive = true
        }
        compile 'com.firebase:firebase-jobdispatcher:0.8.0'

        // 이미지 관련
        compile "com.github.bumptech.glide:glide:$GLIDE_VERSION"
        annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
        compile 'jp.wasabeef:glide-transformations:2.0.1'

        // 통신 관련
        compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
        compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
        compile "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
        compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
        compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
        compile "com.squareup.okhttp3:okhttp-urlconnection:$OKHTTP_VERSION"

        // findview 관련
        compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
        annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

        // 로그 관련
        compile "com.jakewharton.timber:timber:$TIMBER_VERSION"

        //RxAndroid
        compile "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"

        // Because RxAndroid releases are few and far between, it is recommended you also

        // explicitly depend on RxJava's latest version for bug fixes and new features.
        compile "io.reactivex.rxjava2:rxandroid:$RXANDROID_VERSION"

        //Dagger2
        compile "com.google.dagger:dagger:$DAGGER_VERSION"
        annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

        // otto EventBus
        compile "com.squareup:otto:$OTTO_VERSION"

        // rxPermissin
        compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

        // stickyheadersrecyclerview
        compile 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'
    }
}
apply plugin: 'com.google.gms.google-services'